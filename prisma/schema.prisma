generator client {
  provider = "prisma-client-js"
}

// generator dbml {
//   provider = "prisma-dbml-generator"
// }

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  role          Role      @default(USER)
  accounts      Account[]
  sessions      Session[]
}

enum Role {
  USER
  ADMIN
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Category {
  id          String    @id @default(cuid())
  name        String
  description String?
  created_at  DateTime  @default(now())
  updated_at  DateTime? @updatedAt
}

model Color {
  id         String    @id @default(cuid())
  purple     Boolean?  @default(false)
  red        Boolean?  @default(false)
  orange     Boolean?  @default(false)
  yellow     Boolean?  @default(false)
  black      Boolean?  @default(false)
  white      Boolean?  @default(false)
  pink       Boolean?  @default(false)
  blue       Boolean?  @default(false)
  sky        Boolean?  @default(false)
  teal       Boolean?  @default(false)
  green      Boolean?  @default(false)
  gray       Boolean?  @default(false)
  created_at DateTime  @default(now())
  updated_at DateTime? @updatedAt
  Product    Product?  @relation(fields: [productId], references: [id])
  productId  String?
}

model Size {
  id         String    @id @default(cuid())
  xxs        Boolean?  @default(false)
  xs         Boolean?  @default(false)
  s          Boolean?  @default(false)
  m          Boolean?  @default(false)
  l          Boolean?  @default(false)
  xl         Boolean?  @default(false)
  xxl        Boolean?  @default(false)
  xxxl       Boolean?  @default(false)
  created_at DateTime  @default(now())
  updated_at DateTime? @updatedAt
  Product    Product?  @relation(fields: [productId], references: [id])
  productId  String?
}

model Product {
  id          String    @id @default(cuid())
  image       String?
  description String?
  price       Float?
  quantity    Int?
  design      String?
  material    String?
  name        String?   @unique
  created_at  DateTime  @default(now())
  updated_at  DateTime? @updatedAt
  size        Size[]
  color       Color[]
}
